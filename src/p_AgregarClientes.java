
import Connection.conectar;
import Utiliti.Lib;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author gfernandez
 */
public class p_AgregarClientes extends javax.swing.JPanel {

    /**
     * Creates new form p_AgregarClientes
     */
    public p_AgregarClientes() {
        initComponents();
        //nextID();
        //cargar("");
        lblFecha.setText(fecha());
        cbCargar();
        cargar("");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        btnBuscar = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        MaskFormatter maskCedula  = null;

        try{
            maskCedula =  new MaskFormatter("###-#######-#");
            maskCedula.setPlaceholder(" ");

        }catch(Exception e) {
            System.out.println("Error en el campo Cedula");
            System.out.println(e.toString());
        }
        ftxt_buscar = new javax.swing.JFormattedTextField(maskCedula);
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_apellido = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_direccion = new javax.swing.JTextField();
        cb_sexo = new javax.swing.JComboBox();
        MaskFormatter maskCedula1  = null;

        try{
            maskCedula1 =  new MaskFormatter("###-#######-#");
            maskCedula1.setPlaceholder(" ");

        }catch(Exception e) {
            System.out.println("Error en el campo Cedula");
            System.out.println(e.toString());
        }
        txtf_cedula = new javax.swing.JFormattedTextField(maskCedula1);
        cb_tipo_contacto = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        cb_tipo_direccion = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        cb_tipo_contacto_2 = new javax.swing.JComboBox();
        txt_direccion_2 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cb_tipo_direccion_2 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        chb_direccion_2 = new javax.swing.JCheckBox();
        chb_telefono_2 = new javax.swing.JCheckBox();
        txt_telefono = new javax.swing.JFormattedTextField();
        txt_telefono_2 = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_cliente = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnLimpiar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(845, 623));
        setMinimumSize(new java.awt.Dimension(845, 623));
        setPreferredSize(new java.awt.Dimension(845, 623));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar Cliente"));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnMostrar.setText("Mostrar todo");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMostrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ftxt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(btnMostrar)
                    .addComponent(ftxt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Personales"));

        jLabel1.setText("Nombre:");

        txt_apellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_apellidoActionPerformed(evt);
            }
        });

        jLabel2.setText("Apellido:");

        jLabel3.setText("Cedula:");

        jLabel4.setText("Sexo:");

        jLabel5.setText("Telefono:");

        jLabel6.setText("Direccion:");

        cb_sexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Femenino" }));
        cb_sexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_sexoActionPerformed(evt);
            }
        });

        cb_tipo_contacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tipo_contactoActionPerformed(evt);
            }
        });

        jLabel10.setText("Descripcion:");

        cb_tipo_direccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tipo_direccionActionPerformed(evt);
            }
        });

        jLabel11.setText("Descripcion:");

        jLabel12.setText("ID:");

        lblID.setText("...");
        lblID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });

        cb_tipo_contacto_2.setEnabled(false);
        cb_tipo_contacto_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tipo_contacto_2ActionPerformed(evt);
            }
        });

        txt_direccion_2.setEnabled(false);

        jLabel13.setText("Descripcion:");

        jLabel14.setText("Descripcion:");

        cb_tipo_direccion_2.setEnabled(false);
        cb_tipo_direccion_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tipo_direccion_2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Telefono 2:");

        jLabel15.setText("Direccion 2:");

        chb_direccion_2.setText("Activar");
        chb_direccion_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chb_direccion_2ActionPerformed(evt);
            }
        });

        chb_telefono_2.setText("Activar");
        chb_telefono_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chb_telefono_2ActionPerformed(evt);
            }
        });

        txt_telefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_telefonoActionPerformed(evt);
            }
        });

        txt_telefono_2.setEnabled(false);
        txt_telefono_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_telefono_2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(cb_sexo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txt_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel11)
                        .addGap(4, 4, 4)
                        .addComponent(cb_tipo_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_direccion_2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cb_tipo_direccion_2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                .addComponent(chb_direccion_2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_telefono_2)
                                .addGap(5, 5, 5)
                                .addComponent(jLabel14)
                                .addGap(2, 2, 2)
                                .addComponent(cb_tipo_contacto_2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(chb_telefono_2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(jLabel2)
                                .addGap(4, 4, 4)
                                .addComponent(txt_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtf_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txt_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addGap(4, 4, 4)
                                .addComponent(cb_tipo_contacto, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel12))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel1))
                            .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel2))
                            .addComponent(txt_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblID)))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtf_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txt_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cb_tipo_contacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel10))))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(cb_sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(cb_tipo_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel11)))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txt_telefono_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cb_tipo_contacto_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chb_telefono_2)))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_direccion_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15))
                    .addComponent(jLabel13)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cb_tipo_direccion_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chb_direccion_2))))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, -1, -1));

        tbl_cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Apellido", "Cedula", "Sexo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_cliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_clienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_cliente);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 825, 190));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Accion"));

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/clear-icon.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/update-icon.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/trash-icon.png"))); // NOI18N
        btnEliminar.setText("Eiminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Log-Out-icon.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Save-icon.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnGuardar)
                .addGap(47, 47, 47)
                .addComponent(btnLimpiar)
                .addGap(50, 50, 50)
                .addComponent(btnActualizar)
                .addGap(51, 51, 51)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(btnGuardar)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalir)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12))))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 825, -1));

        jPanel4.setBackground(new java.awt.Color(255, 102, 51));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel7.setText("AGREGAR CLIENTES");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Fecha:");

        lblFecha.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFecha.setText("00/00/0000");
        lblFecha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblFecha))
                .addGap(20, 20, 20))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 845, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        
        cargar(Lib.strCedula(ftxt_buscar.getText().toString()));
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        cargar("");
        limpiar();
        nextID();
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void txt_apellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_apellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_apellidoActionPerformed

    private void cb_sexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_sexoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_sexoActionPerformed

    private void cb_tipo_contactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tipo_contactoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_tipo_contactoActionPerformed

    private void cb_tipo_direccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tipo_direccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_tipo_direccionActionPerformed

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void tbl_clienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_clienteMouseClicked
        seleccionarCliente();
    }//GEN-LAST:event_tbl_clienteMouseClicked

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
        cargar("");
        //System.out.println("Key: "+mp_cb_contacto.get(cb_tipo_contacto.getSelectedItem()));
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        actualizarCliente();
        cargar("");
        limpiar();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminarUsuario();
        limpiar();
        cargar("");
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        int mensaje = JOptionPane.showConfirmDialog(this, "Salir?");

        if (mensaje == JOptionPane.YES_NO_OPTION) {
            this.setVisible(false);
            //Window w = SwingUtilities.getWindowAncestor(p_AgregarClientes.this);
            //w.setVisible(false);
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        AgregarCliente();
        cargar("");
        limpiar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void cb_tipo_contacto_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tipo_contacto_2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_tipo_contacto_2ActionPerformed

    private void cb_tipo_direccion_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tipo_direccion_2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_tipo_direccion_2ActionPerformed

    private void chb_telefono_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chb_telefono_2ActionPerformed
        if(chb_telefono_2.isSelected()){
            txt_telefono_2.setEnabled(true);
            cb_tipo_contacto_2.setEnabled(true);
        }else{
            txt_telefono_2.setEnabled(false);
            cb_tipo_contacto_2.setEnabled(false);
        }
    }//GEN-LAST:event_chb_telefono_2ActionPerformed

    private void chb_direccion_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chb_direccion_2ActionPerformed
        if(chb_direccion_2.isSelected()){
            txt_direccion_2.setEnabled(true);
            cb_tipo_direccion_2.setEnabled(true);
        }else{
            txt_direccion_2.setEnabled(false);
            cb_tipo_direccion_2.setEnabled(false);
        }
    }//GEN-LAST:event_chb_direccion_2ActionPerformed

    private void txt_telefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_telefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_telefonoActionPerformed

    private void txt_telefono_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_telefono_2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_telefono_2ActionPerformed

    private Map mp_cb_contacto;
    private Map mp_cb_direccion;
    private int index_client;
    private final String v_tbl_name_cliente = "cliente";
    private final String v_tbl_name_cliente_contacto = "cliente_contacto";
    private final String v_tbl_name_cliente_direccion = "cliente_direccion";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox cb_sexo;
    private javax.swing.JComboBox cb_tipo_contacto;
    private javax.swing.JComboBox cb_tipo_contacto_2;
    private javax.swing.JComboBox cb_tipo_direccion;
    private javax.swing.JComboBox cb_tipo_direccion_2;
    private javax.swing.JCheckBox chb_direccion_2;
    private javax.swing.JCheckBox chb_telefono_2;
    private javax.swing.JFormattedTextField ftxt_buscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblID;
    private javax.swing.JTable tbl_cliente;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_direccion_2;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JFormattedTextField txt_telefono;
    private javax.swing.JFormattedTextField txt_telefono_2;
    private javax.swing.JFormattedTextField txtf_cedula;
    // End of variables declaration//GEN-END:variables

    private void limpiar() {
        //Boton limpiar
        lblID.setText("...");
        txt_nombre.setText(null);
        txt_apellido.setText(null);
        txtf_cedula.setText(null);
        txt_telefono.setText(null);
        txt_direccion.setText(null);
        ftxt_buscar.setText(null);
        txt_direccion_2.setText(null);
        txt_telefono_2.setText(null);

    }

    public void cargar(String valor) {
        
        String col_name = " id_cliente , nombre , apellido , cedula , sexo ";
        String tbl_name = " cliente ";
        
        //Lib.queryArray(col_name, tbl_name," cedula = '"+ valor + "'");
        if(valor.trim().equals("")){
           
            tbl_cliente = limpiarTabla(tbl_cliente);
            tbl_cliente.setModel(Lib.tblCargar((DefaultTableModel)tbl_cliente.getModel(),Lib.queryArray(col_name, tbl_name)));
            //System.out.println("valor = "+valor);
        }else {
            //System.out.println("hola: " +valor);
            tbl_cliente = limpiarTabla(tbl_cliente);
            tbl_cliente.setModel(Lib.tblCargar((DefaultTableModel)tbl_cliente.getModel(),Lib.queryArray(col_name, tbl_name," cedula LIKE '%"+ valor + "%'")));
            //tbl_cliente.setModel(Lib.tblCargar((DefaultTableModel)tbl_cliente.getModel(),"SELECT  id_cliente , nombre , apellido , cedula , sexo  FROM  cliente  WHERE cedula = '"+ valor+ "'"));
        
        }
        
        /*
        DefaultTableModel model;

        String[] titulos = {"ID", "Nombre", "Apellido", "Cedula", "Sexo", "Direccion", "Descripcion", "Telefono", "Descripcion"};
        String[] registros = new String[10];

        String sql;

        if (valor.equals("")) {

            sql = "Select cliente.id_cliente, cliente.nombre, cliente.apellido, cliente.cedula, cliente.sexo, cliente_direccion.direccion,cliente_direccion.descripcion as direc, cliente_contacto.telefono, cliente_contacto.descripcion as tel\n"
                    + "  FROM cliente, cliente_contacto, cliente_direccion \n"
                    + " WHERE cliente.id_cliente = cliente_contacto.id_cliente and cliente.id_cliente = cliente_direccion.id_cliente";
        } else {

            sql = "Select cliente.id_cliente, cliente.nombre, cliente.apellido, cliente.cedula, cliente.sexo, cliente_contacto.telefono,cliente_contacto.descripcion, cliente_direccion.direccion,cliente_direccion.descripcion\n"
                    + "  FROM cliente, cliente_contacto, cliente_direccion \n"
                    + " WHERE cliente.id_cliente = cliente_contacto.id_cliente and cliente.id_cliente = cliente_direccion.id_cliente\n"
                    + "HAVING cliente.cedula = '" + txtf_cedula.getText() + "'";

        }
        model = new DefaultTableModel(null, titulos);
        conectar conect = new conectar();
        Connection cn = conect.conexion();

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {

                registros[0] = rs.getString("id_cliente");
                registros[1] = rs.getString("nombre");
                registros[2] = rs.getString("apellido");
                registros[3] = rs.getString("cedula");
                registros[4] = rs.getString("sexo");
                registros[5] = rs.getString("direccion");
                registros[6] = rs.getString("direc");
                registros[7] = rs.getString("telefono");
                registros[8] = rs.getString("tel");

                model.addRow(registros);
                tbl_cliente.setModel(model);

            }
            
            rs.close();
            st.close();
            cn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al Cargar la lista de usuarios");
        }
        */
    }

    public void seleccionarCliente() {

        int fila = tbl_cliente.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Debes Seleccionar una Registro.");
        } else {

            lblID.setText(tbl_cliente.getValueAt(fila, 0).toString());
            txt_nombre.setText(tbl_cliente.getValueAt(fila, 1).toString());
            txt_apellido.setText(tbl_cliente.getValueAt(fila, 2).toString());
            txtf_cedula.setText(tbl_cliente.getValueAt(fila, 3).toString());
            cb_sexo.setSelectedItem(tbl_cliente.getValueAt(fila, 4).toString());
            String id = lblID.getText();
            ResultSet rs_contacto = Lib.queryArray("id_cliente_contacto,id_tipo_contacto,descripcion",v_tbl_name_cliente_contacto, "id_cliente = "+id+ "ORDER BY id_cliente_contacto LIMIT 2");
            ResultSet rs_direccion = Lib.queryArray("id_cliente_direccion,id_tipo_direccion,descripcion",v_tbl_name_cliente_direccion, "id_cliente = "+id+ "ORDER BY id_cliente_direccion LIMIT 2");
            
            
            
            txt_direccion.setText(tbl_cliente.getValueAt(fila, 5).toString());
            cb_tipo_direccion.setSelectedItem(tbl_cliente.getValueAt(fila, 6).toString());
            txt_telefono.setText(tbl_cliente.getValueAt(fila, 7).toString());
            cb_tipo_contacto.setSelectedItem(tbl_cliente.getValueAt(fila, 8).toString());
        }

    }

    public void nextID() {

        try {

            conectar conect = new conectar();
            Connection conn = conect.conexion();

            String sql = " Select MAX(id_cliente)+1 as id FROM cliente ";

            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            if (rs.next()) {

                lblID.setText(rs.getString("id"));

            } else {

                JOptionPane.showMessageDialog(this, "El Usuario no esta Registrado");
            }   
            
            rs.close();
            st.close();
            conn.close();

        } catch (HeadlessException | SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }

    public void AgregarCliente() {
        
        
        
        String cedula = Lib.strCedula(txtf_cedula.getText());
        char sex = 'M';
        String nombre = txt_nombre.getText();
        String apellido = txt_apellido.getText();
        String contacto1 = txt_telefono.getText();
        String direcion1 = txt_direccion.getText();
        
        
        if(Lib.validaString(new String[]{nombre,apellido,cedula,contacto1,direcion1})){ 
           if(11 == cedula.length()){
               if(!cb_sexo.getSelectedItem().equals("Masculino")){
                   sex = 'F';
               }
                setIndex_client(Lib.queryInsert(new String[]{"nombre","apellido","cedula","sexo"}
                                                    ,new String[]{nombre,apellido,cedula,String.valueOf(sex)}
                                                    ,v_tbl_name_cliente));
                if(getIndex_client() > 0){
                    Lib.queryInsert(new String[]{"id_cliente","id_tipo_contacto","descripcion"}
                                   ,new String[]{String.valueOf(getIndex_client()),mp_cb_contacto.get(cb_tipo_contacto.getSelectedItem()).toString(),contacto1}
                                   ,v_tbl_name_cliente_contacto);

                    Lib.queryInsert(new String[]{"id_cliente","id_tipo_direccion","descripcion"}
                                   ,new String[]{String.valueOf(getIndex_client()),mp_cb_direccion.get(cb_tipo_direccion.getSelectedItem()).toString(),direcion1}
                                   ,v_tbl_name_cliente_direccion); 
                    
                    if(chb_telefono_2.isSelected()){
                        Lib.queryInsert(new String[]{"id_cliente","id_tipo_contacto","descripcion"}
                                   ,new String[]{String.valueOf(getIndex_client()),mp_cb_contacto.get(cb_tipo_contacto_2.getSelectedItem()).toString(),txt_telefono_2.getText()}
                                   ,v_tbl_name_cliente_contacto);
                    }
                    
                    if(chb_direccion_2.isSelected()){
                        Lib.queryInsert(new String[]{"id_cliente","id_tipo_direccion","descripcion"}
                                   ,new String[]{String.valueOf(getIndex_client()),mp_cb_direccion.get(cb_tipo_direccion_2.getSelectedItem()).toString(),txt_direccion_2.getText()}
                                   ,v_tbl_name_cliente_direccion);
                    }
                    
                }else{
                    System.err.println("Error - Al insertar cliente");
                }
                
                //System.out.println("index: "+getIndex_client());        
                /*p_AgregarClienteContacto ac = new p_AgregarClienteContacto();
                ac.setIndex_client(getIndex_client());
                ac.Index();
                MantenimientoADMIN.mostrarPanel(ac);
                */
           }else {
               JOptionPane.showConfirmDialog(null,"Introdusca una cedula valida.", "ERROR",JOptionPane.ERROR_MESSAGE,JOptionPane.OK_OPTION);
           }
           
        }else{
           JOptionPane.showConfirmDialog(null,"Llene todo los campos.", "ERROR",JOptionPane.ERROR_MESSAGE,JOptionPane.OK_OPTION);
        }
       
        
        
        
        // hacemos una conexion a la base de datos y creamos un objeto de esa conexion para Insertar los datos en la base de datos.`  

            /*int mostrar = JOptionPane.showConfirmDialog(null, "Desea Guardar este Usuario?");

            if (mostrar == JOptionPane.YES_NO_OPTION) {
                
                 try {
                    Connection conn = new conectar().conexion();
                    Statement st = conn.createStatement();
                    String id = lblID.getText();
                    String nombre = txtNombre.getText();
                    String apellido = txtApellido.getText();
                    String cedula = txtCedula.getText();
                    String sexo = comboSexo.getSelectedItem().toString();
                    String telefono = txtTelefono.getText();
                    String tipo_telefono = comboTipoContacto.getSelectedItem().toString();
                    String direccion = txtDireccion.getText();
                    String tipo_direccion = comboTipoDireccion.getSelectedItem().toString();
                    st.executeUpdate("INSERT INTO cliente (nombre, apellido, cedula, sexo) VALUES('" + nombre + "','" + apellido + "','" + cedula + "','" + sexo + "')");
                    st.executeUpdate("INSERT INTO cliente_contacto (telefono, descripcion, id_cliente) VALUES('" + telefono + "','" + tipo_telefono + "','" + id + "')");
                    st.executeUpdate("INSERT INTO cliente_direccion (direccion, descripcion, id_cliente) VALUES('" + direccion + "','" + tipo_direccion + "','" + id + "')");

                    st.close();
                    JOptionPane.showMessageDialog(null, "Usuario Registrado!");

                   //System.out.print(st);
                   */
            
           
        
    }

    public void actualizarCliente() {

        int mensaje = JOptionPane.showConfirmDialog(this, "Desea Guardar los cambios Actualizados?");

        if (mensaje == JOptionPane.YES_NO_OPTION) {
            
            
            String id = lblID.getText();
            String nombre = txt_nombre.getText();
            String apellido = txt_apellido.getText();
            String cedula = Lib.strCedula(txtf_cedula.getText());
            String sexo = "M";
            String contacto1 = txt_telefono.getText();
            mp_cb_direccion.get(cb_tipo_direccion.getSelectedItem()).toString();
            String tipo_contacto = mp_cb_contacto.get(cb_tipo_contacto.getSelectedItem()).toString();
            String direccion1 = txt_direccion.getText();
            String tipo_direccion = mp_cb_direccion.get(cb_tipo_direccion.getSelectedItem()).toString();
            if(!cb_sexo.getSelectedItem().equals("Masculino")){
                   sexo = "F";
               }
            if(!id.trim().equals("") && id.trim().equals("...")){
                if(Lib.validaString(new String[]{nombre,apellido,cedula,contacto1,direccion1})){ 
                    if(11 == cedula.length()){

                        int filas = Lib.queryUpdate(new String[]{"nombre","apellido","cedula","sexo"}
                                                   ,new String[]{nombre,apellido,cedula,sexo}
                                                   ,v_tbl_name_cliente,"id_cliente = " + id);
                        if(filas > 0){
                            Lib.queryUpdate(new String[]{"id_cliente","id_tipo_contacto","descripcion"}
                                           ,new String[]{id,mp_cb_contacto.get(cb_tipo_contacto.getSelectedItem()).toString(),contacto1}
                                           ,v_tbl_name_cliente_contacto,"");

                            Lib.queryInsert(new String[]{"id_cliente","id_tipo_direccion","descripcion"}
                                           ,new String[]{String.valueOf(getIndex_client()),mp_cb_direccion.get(cb_tipo_direccion.getSelectedItem()).toString(),direcion1}
                                           ,v_tbl_name_cliente_direccion); 

                            if(chb_telefono_2.isSelected()){
                                Lib.queryInsert(new String[]{"id_cliente","id_tipo_contacto","descripcion"}
                                           ,new String[]{String.valueOf(getIndex_client()),mp_cb_contacto.get(cb_tipo_contacto_2.getSelectedItem()).toString(),txt_telefono_2.getText()}
                                           ,v_tbl_name_cliente_contacto);
                            }

                            if(chb_direccion_2.isSelected()){
                                Lib.queryInsert(new String[]{"id_cliente","id_tipo_direccion","descripcion"}
                                           ,new String[]{String.valueOf(getIndex_client()),mp_cb_direccion.get(cb_tipo_direccion_2.getSelectedItem()).toString(),txt_direccion_2.getText()}
                                           ,v_tbl_name_cliente_direccion);
                            }
                        }

                    }
                }
            
            }
            /*try {
                Connection conn = new conectar().conexion();
                Statement st = conn.createStatement();
                String id = lblID.getText();
                String nombre = txt_nombre.getText();
                String apellido = txt_apellido.getText();
                String cedula = txtf_cedula.getText();
                String sexo = cb_sexo.getSelectedItem().toString();
                String telefono = txt_telefono.getText();
                String tipo_telefono = cb_tipo_contacto.getSelectedItem().toString();
                String direccion = txt_direccion.getText();
                String tipo_direccion = cb_tipo_direccion.getSelectedItem().toString();

                String sql = "UPDATE cliente, cliente_contacto, cliente_direccion SET cliente.nombre = '" + nombre + "',cliente.apellido = '" + apellido + "',cliente.cedula = '" + cedula + "',cliente.sexo = '" + sexo + "',cliente_direccion.direccion = '" + direccion + "',cliente_direccion.descripcion  = '" + tipo_direccion + "', cliente_contacto.telefono = '" + telefono + "',cliente_contacto.descripcion = '" + tipo_telefono + "' "
                        + "    WHERE cliente.id_cliente = '" + id + "' and cliente_contacto.id_cliente = '" + id + "' and cliente_direccion.id_cliente = '" + id + "'";

                st.executeUpdate(sql);
                st.close();
                conn.close();
                JOptionPane.showMessageDialog(null, "Registro actualizado");

            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, e.toString());
            }
            */
        }
    }

    public void eliminarUsuario() {

        int mensaje = JOptionPane.showConfirmDialog(this, "Desea Eliminar este Usuario?", "Eliminar", JOptionPane.YES_NO_OPTION);

        if (mensaje == JOptionPane.YES_NO_OPTION) {
            try {
                Connection conn = new conectar().conexion();
                String id = lblID.getText();
                String sql = "DELETE FROM cliente WHERE cliente.id_cliente = '" + id + "'";
                String sql1 = "DELETE FROM cliente_contacto WHERE cliente_contacto.id_cliente = '" + id + "'";
                String sql2 = "DELETE FROM cliente_direccion WHERE cliente_direccion.id_cliente = '" + id + "'";
                Statement st = conn.createStatement();
                st.executeUpdate(sql1);
                st.executeUpdate(sql2);
                st.executeUpdate(sql);

                st.close();
                conn.close();
                JOptionPane.showMessageDialog(null, "Usuario Eliminado");

            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, e.toString());

            }
        }
    }

    public static String fecha() {

        Date fecha = new Date();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/YYYY");
        return formatoFecha.format(fecha);

    }
    public int getIndex_client() {
        return index_client;
    }

    public void setIndex_client(int index_inser_client) {
        this.index_client = index_inser_client;
    }
    
    public void cbCargar(){
        
        mp_cb_contacto = Lib.mapCargar("tipo_contacto");
        mp_cb_direccion = Lib.mapCargar("tipo_direccion");
        
        cb_tipo_contacto = Lib.cbCargar(cb_tipo_contacto, mp_cb_contacto);
        cb_tipo_contacto_2 = Lib.cbCargar(cb_tipo_contacto_2, mp_cb_contacto);
        cb_tipo_direccion = Lib.cbCargar(cb_tipo_direccion, mp_cb_direccion);
        cb_tipo_direccion_2 = Lib.cbCargar(cb_tipo_direccion_2, mp_cb_direccion);
        
    }
    
    public JTable limpiarTabla(JTable tbl){
    
        if(tbl.getRowCount() > 0){
            DefaultTableModel model = (DefaultTableModel)tbl.getModel();
            
            int fila = model.getRowCount();
            
            for(int i=0;i < fila;i++ ){
                
                model.removeRow(0);
            }
            
            tbl.setModel(model);
            
        }
        
        return tbl;
    }
}
